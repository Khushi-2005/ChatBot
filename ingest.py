# ingest.py
import os
import argparse
from langchain.document_loaders import PyPDFLoader
from langchain.text_splitter import RecursiveCharacterTextSplitter
from langchain.embeddings import HuggingFaceEmbeddings
from langchain.vectorstores import Chroma

def ingest_pdf_to_chroma(pdf_path):
    # 1Ô∏è‚É£ Load PDF
    print(f"üìÑ Loading PDF: {pdf_path}")
    loader = PyPDFLoader(pdf_path)
    documents = loader.load()

    # 2Ô∏è‚É£ Split into chunks
    print("‚úÇÔ∏è Splitting documents...")
    text_splitter = RecursiveCharacterTextSplitter(
        chunk_size=500,      # adjust chunk size if needed
        chunk_overlap=50
    )
    docs = text_splitter.split_documents(documents)

    # 3Ô∏è‚É£ Create embeddings
    print("üü¢ Creating embeddings...")
    embeddings = HuggingFaceEmbeddings(model_name="all-MiniLM-L6-v2")

    # 4Ô∏è‚É£ Store in Chroma
    print("üì¶ Adding documents to ChromaDB...")
    db = Chroma(persist_directory="vectorstore", embedding_function=embeddings)
    for i, doc in enumerate(docs):
        db.add_documents([doc])

    # 5Ô∏è‚É£ Persist
    db.persist()
    print("‚úÖ Ingestion complete! Vector store saved in 'vectorstore' folder.")

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="Ingest PDF into ChromaDB using HuggingFace embeddings.")
    parser.add_argument("--pdf", type=str, required=True, help="Path to the PDF file")
    args = parser.parse_args()

    ingest_pdf_to_chroma(args.pdf)
